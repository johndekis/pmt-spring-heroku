{"version":3,"sources":["components/layout/Landing.js","securityUtils/setJWTToken.js","actions/securityActions.js","actions/types.js","components/userManagement/Register.js","components/userManagement/Login.js","actions/projectActions.js","components/project/ProjectItem.js","components/project/CreateButton.js","components/Dashboard.js","components/layout/Header.js","components/project/AddProject.js","components/project/UpdateProject.js","components/projectBoard/projectTasks/ProjectTask.js","actions/backlogActions.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/projectTasks/AddProjectTask.js","components/projectBoard/projectTasks/UpdateProjectTask.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["Landing","this","props","security","validToken","history","push","react_default","a","createElement","className","Link","to","Component","connect","state","setJWTToken","token","axios","defaults","headers","common","logout","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","localStorage","removeItem","type","payload","stop","_x3","apply","arguments","Register","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","value","onSubmit","preventDefault","newUser","username","fullname","password","confirmPassword","createNewUser","errors","bind","assertThisInitialized","inherits","createClass","key","nextProps","classnames","is-invalid","placeholder","_ref","_callee","_context","post","t0","response","data","_x","Login","LoginRequest","login","_ref2","_callee2","res","decoded","_context2","sent","setItem","jwt_decode","_x2","createProject","project","ProjectItem","_getPrototypeOf2","_len","length","args","Array","_key","concat","onDeleteClick","id","deleteProject","projectIdentifier","projectName","description","onClick","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateButton","Fragment","Dashboard","getProjects","projects","project_CreateButton","map","project_ProjectItem","get","Header","location","href","headerLinks","_this$props$security","user","authenticatedUser","fullName","unauthenticatedUser","data-toggle","data-target","AddProject","start_date","end_date","newProject","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityClass","priorityString","project_task","projectSequence","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks","projectTasks_ProjectTask","filter","element","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","projectBoard_Backlog","boardDisplay","backlog","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","_this$props$match$par","_nextProps$project_ta","_this$props$match$par2","getProjectTask","updateProjectTask","patch","initialState","combineReducers","undefined","action","objectSpread","task","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","devToolsExtension","f","component","otherProps","objectWithoutProperties","Route","assign","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","BrowserRouter","layout_Header","exact","path","Switch","securityUtils_SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7d2452b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n \r\nclass Landing extends Component {\r\n\r\n  componentDidMount() {\r\n    if(this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import axios from 'axios'\r\n\r\nconst setJWTToken = token => {\r\n    if(token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n}\r\n\r\nexport default setJWTToken;","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/users/register`, newUser);\r\n        history.push(`/login`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n      \r\n        const res = await axios.post(`/api/users/login`, LoginRequest);\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setJWTToken(token);\r\n        const decoded = jwt_decode(token);\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        })\r\n        \r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nexport const logout = () => async dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n    })\r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Backlog action types\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n//\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createNewUser } from '../../actions/securityActions'\r\n\r\n\r\nexport class Register extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // console.log(nextProps.project);\r\n    if(nextProps.errors) {\r\n        this.setState({ errors: nextProps.errors})\r\n    }\r\n   \r\n };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]:e.target.value })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    }\r\n\r\n    this.props.createNewUser(newUser, this.props.history)\r\n\r\n}\r\n\r\n  render() {\r\n    const { errors } = this.state\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                    //required\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                   )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    value={this.state.username}\r\n                    onChange={this.onChange} \r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                                      \r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                   )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}                 \r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                   )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                   )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);","import React, { Component } from \"react\";\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../actions/securityActions'\r\n\r\nexport class Login extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    }\r\n    \r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    if(this.props.security.validToken) {\r\n      this.props.history.push('/dashboard');\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n        this.setState({ errors: nextProps.errors})\r\n    }\r\n    \r\n    if(nextProps.security.validToken){\r\n      this.props.history.push('/dashboard');\r\n    }   \r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]:e.target.value })\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    }\r\n\r\n    this.props.login(LoginRequest)\r\n\r\n}\r\n\r\n  render() {\r\n    const { errors } = this.state\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    value={this.state.username}\r\n                    onChange={this.onChange} \r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                   )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}                 \r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                   )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);","import axios from 'axios'\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types'\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"/api/project\", project)\r\n        history.push('/dashboard')\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\");\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    })\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch(error) {\r\n        history.push('/dashboard');\r\n    };    \r\n};\r\n\r\nexport const deleteProject = (id, history) => async dispatch => {\r\n    // TODO: replace with react modal \r\n    if(window.confirm('Are you sure you want to delete this project?')) {\r\n       await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n            type: DELETE_PROJECT,\r\n            payload: id\r\n        }) \r\n    }    \r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { deleteProject } from '../../actions/projectActions'\r\n\r\nexport class ProjectItem extends Component {\r\n\r\n    onDeleteClick = id => {\r\n        this.props.deleteProject(id)\r\n    }\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n      <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n              <div className=\"col-2\">\r\n                  <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n              </div>\r\n              <div className=\"col-lg-6 col-md-4 col-8\">\r\n                  <h3>{project.projectName}</h3>\r\n                  <p>{project.description}</p>\r\n              </div>\r\n              <div className=\"col-md-4 d-none d-lg-block\">\r\n                  <ul className=\"list-group\">\r\n                      <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                          <li className=\"list-group-item board\">\r\n                              <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                          </li>\r\n                      </Link>\r\n                    <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                        <li className=\"list-group-item update\">\r\n                            <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                        </li>\r\n                    </Link>\r\n                          \r\n                      \r\n                          <li className=\"list-group-item delete\" \r\n                          onClick={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                              <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                          </li>\r\n                      \r\n                  </ul>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>  \r\n    )\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n \r\nconst CreateButton = () => {\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                Create a Project\r\n            </Link>\r\n        </React.Fragment>    \r\n    );  \r\n}\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport ProjectItem from './project/ProjectItem';\r\nimport CreateButton from './project/CreateButton';\r\n\r\nexport class Dashboard extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getProjects();\r\n    }\r\n\r\n    render() {\r\n        const { projects } = this.props.project;\r\n\r\n        return (\r\n            <div className=\"projects\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <h1 className=\"display-4 text-center\">Projects</h1>\r\n                    <br />\r\n                    \r\n                    <CreateButton />                    \r\n                    <br />\r\n                    <hr />\r\n                    {projects.map((project) => (\r\n                         <ProjectItem key={project.id} project={project}/>\r\n                    ))}        \r\n                   \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>           \r\n        );\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../../actions/securityActions'\r\n \r\nexport class Header extends Component {\r\n    logout() {\r\n        this.props.logout();\r\n        window.location.href = '/';\r\n    }\r\n    render() {\r\n    \r\n    const { validToken, user } = this.props.security;\r\n    \r\n    const authenticatedUser = (\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n                </Link>\r\n            </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                    <i className=\"fas fa-user-circle mr-1\" />\r\n                    {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link\r\n                    className=\"nav-link\"\r\n                    to=\"/logout\"\r\n                    onClick={this.logout.bind(this)}\r\n                    >\r\n                    Logout\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n      </div>\r\n    )\r\n\r\n    const unauthenticatedUser = (\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                Dashboard\r\n                </Link>\r\n            </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/register\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n      </div>\r\n    )\r\n\r\n    let headerLinks;\r\n\r\n    if(validToken && user) {\r\n        headerLinks = authenticatedUser;\r\n    } else {\r\n        headerLinks = unauthenticatedUser;\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n          <div className=\"container\">\r\n              <Link className=\"navbar-brand\" to=\"/dashboard\">\r\n                  Personal Project Management Tool\r\n              </Link>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                  <span className=\"navbar-toggler-icon\" />\r\n              </button>\r\n                {headerLinks}\r\n            </div>\r\n        </nav>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component } from 'react'\r\nimport classnames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../actions/projectActions'\r\n\r\n\r\nexport class AddProject extends Component {\r\n    constructor() {\r\n        super();\r\n    \r\n        this.state = {\r\n          projectName: \"\",\r\n          projectIdentifier: \"\",\r\n          description: \"\",\r\n          start_date: \"\",\r\n          end_date: \"\",\r\n          errors: {}\r\n        };\r\n    \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n      }\r\n\r\n      componentWillReceiveProps(nextProps) {\r\n          if(nextProps.errors) {\r\n              this.setState({ errors: nextProps.errors })\r\n          }\r\n      }\r\n    \r\n      onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n      }\r\n    \r\n      onSubmit(e) {\r\n        e.preventDefault();\r\n        const newProject = {\r\n          projectName: this.state.projectName,\r\n          projectIdentifier: this.state.projectIdentifier,\r\n          description: this.state.description,\r\n          start_date: this.state.start_date,\r\n          end_date: this.state.end_date\r\n        };\r\n    \r\n        this.props.createProject(newProject, this.props.history)\r\n      }\r\n  render() {\r\n      const { errors } = this.state;\r\n    return (\r\n        <div>\r\n            \r\n            <div className=\"project\">\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            \r\n                            <input\r\n                                type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg \", {\r\n                                    \"is-invalid\": errors.projectName\r\n                                })}\r\n                                placeholder=\"Project Name\"\r\n                                name=\"projectName\"\r\n                                value={this.state.projectName}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            {errors.projectName && (\r\n                                <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        \r\n                            <input\r\n                                type=\"text\"\r\n                                className={classnames(\"form-control form-control-lg \", {\r\n                                    \"is-invalid\": errors.projectIdentifier\r\n                                })}\r\n                                placeholder=\"Unique Project ID\"\r\n                                name=\"projectIdentifier\"\r\n                                value={this.state.projectIdentifier}\r\n                                onChange={this.onChange}\r\n                            />\r\n                            {errors.projectIdentifier && (\r\n                                <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <textarea\r\n                        className={classnames(\"form-control form-control-lg \", {\r\n                            \"is-invalid\": errors.description\r\n                        })}\r\n                            placeholder=\"Project Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        {errors.description && (\r\n                            <div className=\"invalid-feedback\">{errors.description}</div>\r\n                        )}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control form-control-lg\"\r\n                                name=\"start_date\"\r\n                                value={this.state.start_date}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"date\"\r\n                                className=\"form-control form-control-lg\"\r\n                                name=\"end_date\"\r\n                                value={this.state.end_date}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                            <input\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-block mt-4\"\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from 'react'\r\nimport { getProject, createProject } from '../../actions/projectActions'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport classnames from 'classnames'\r\n\r\nexport class UpdateProject extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: \"\",\r\n            projectName: \"\",\r\n            projectIdentifier: \"\",\r\n            description: \"\",\r\n            start_date: \"\",\r\n            end_date: \"\",\r\n            errors: {}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n       // console.log(nextProps.project);\r\n       if(nextProps.errors) {\r\n           this.setState({ errors: nextProps.errors})\r\n       }\r\n        const {\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        } = nextProps.project;\r\n\r\n\r\n        this.setState({\r\n            id,\r\n            projectName,\r\n            projectIdentifier,\r\n            description,\r\n            start_date,\r\n            end_date\r\n        });\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    };\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]:e.target.value });\r\n    };\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n            projectName: this.state.projectName,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            description: this.state.description,\r\n            start_date: this.state.start_date,\r\n            end_date: this.state.end_date,\r\n        }\r\n\r\n        this.props.createProject(updateProject, this.props.history)\r\n\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n        <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n                <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                <hr />\r\n                <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    name=\"projectName\"\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    {errors.projectName && (\r\n                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                    )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    name=\"projectIdentifier\"\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    value={this.state.projectIdentifier}\r\n                    disabled\r\n                    />\r\n                   \r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                    name=\"description\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                        \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    {errors.description && (\r\n                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                    )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                    />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                    />\r\n                </div>\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    };\r\n};\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport { deleteProjectTask } from '../../../actions/backlogActions'\r\n\r\nexport class ProjectTask extends Component {\r\n\r\n    onDeleteClick(backlog_id, pt_id) {\r\n        this.props.deleteProjectTask(backlog_id, pt_id)\r\n    }\r\n\r\n  render() {\r\n    const { project_task } = this.props\r\n    const backlog_id  = project_task.projectIdentifier\r\n    const pt_id = project_task.projectSequence\r\n    let priorityClass;\r\n    let priorityString;\r\n\r\n    if(project_task.priority === 1) {\r\n       priorityClass = \"bg-danger text-light\"\r\n       priorityString = \"HIGH\"\r\n    }\r\n    if(project_task.priority === 2) {\r\n        priorityClass = \"bg-warning text-light\"\r\n       priorityString = \"MEDIUM\"\r\n    }\r\n    if(project_task.priority === 3) {\r\n        priorityClass = \"bg-info text-light\"\r\n       priorityString = \"LOW\"\r\n    }\r\n    return (\r\n        <div className=\"card mb-1 bg-light\">\r\n            <div className={`card-header text-primary ${priorityClass}`}>\r\n                ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n            </div>\r\n            <div className=\"card-body bg-light\">\r\n            <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                <p className=\"card-text text-truncate \">\r\n                    {project_task.acceptanceCriteria}\r\n                </p>\r\n                <Link to={`/updateProjectTask/${backlog_id}/${pt_id}`} className=\"btn btn-primary\">\r\n                    View / Update\r\n                </Link>\r\n                <button \r\n                onClick={this.onDeleteClick.bind(this, backlog_id, pt_id)} \r\n                className=\"btn btn-danger ml-4\">\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n ","import axios from 'axios'\r\nimport { GET_ERRORS, GET_PROJECT_TASK, DELETE_PROJECT_TASK, GET_BACKLOG } from './types'\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        history.push(`/projectBoard/${backlog_id}`)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        })\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }    \r\n}\r\n\r\nexport const getBacklog = (backlog_id) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        })       \r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        });\r\n    } catch(error) {\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n    };    \r\n};\r\n\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, history) => async dispatch => {\r\n    try {\r\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n      history.push(`/projectBoard/${backlog_id}`);\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if(window.confirm(`You are deleteing project task ${pt_id}, this action cannot be undone. Continue?`)) {\r\n       await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n       dispatch({\r\n           type: DELETE_PROJECT_TASK,\r\n           payload: pt_id\r\n       })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ProjectTask from './projectTasks/ProjectTask';\r\n\r\nexport class Backlog extends Component {\r\n  render() {\r\n    const { project_tasks } = this.props\r\n    //console.log(this.props);\r\n    const tasks = project_tasks.map((project_task) => (\r\n        <ProjectTask key={project_task.id} project_task={project_task}/>\r\n    ))\r\n\r\n    return (      \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {tasks.filter((element) =>  element.props.project_task.status === 'TO_DO' )}\r\n\r\n                \r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {tasks.filter((element) =>  element.props.project_task.status === 'IN_PROGRESS' )}\r\n                    \r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {tasks.filter((element) =>  element.props.project_task.status === 'DONE' )}\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Backlog from './Backlog';\r\nimport { getBacklog } from '../../actions/backlogActions'\r\n//import { getErrors } from '../../actions/'\r\n\r\n\r\nexport class ProjectBoard extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors})\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id)\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;  \r\n    const { project_tasks } = this.props;\r\n    const { errors } = this.state\r\n\r\n    let BoardContent; \r\n\r\n    const boardDisplay = (project_tasks, errors) => {\r\n      if(project_tasks.length < 1 ) {\r\n        if(errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectNotFound}</div>\r\n          )\r\n        } else if(errors.projectIdentifier){\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">{errors.projectIdentifier}</div>\r\n          )          \r\n        } else {\r\n          return ( \r\n            <div className=\"alert alert-info text-center\" role=\"alert\"> There are no Tasks for this project! </div>\r\n            )\r\n        }\r\n      } else {\r\n        return (<Backlog project_tasks={project_tasks} />)\r\n      }\r\n    }\r\n\r\n    BoardContent = boardDisplay(project_tasks, errors)\r\n    \r\n    return (\r\n      \r\n      <div className=\"container\">\r\n          <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n              <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n          </Link>\r\n          <br />\r\n          <hr />\r\n         {BoardContent}\r\n          \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  project_tasks : PropTypes.array.isRequired,\r\n  getBacklog : PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_tasks: state.backlog.project_tasks,\r\n  errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport { addProjectTask } from '../../../actions/backlogActions'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class AddProjectTask extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const { id } = this.props.match.params;\r\n        this.state = {\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            \"projectIdentifier\": id,\r\n            \"errors\": {}\r\n        }\r\n        this.onChange =this.onChange.bind(this)\r\n        this.onSubmit =this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]:e.target.value })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        //alert(`submit ${e}`);\r\n        e.preventDefault();\r\n\r\n        \r\n        const newTask = {            \r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate\r\n        }\r\n        //console.log(newTask);\r\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\r\n    }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params; \r\n    const { errors } = this.state;\r\n\r\n    return (      \r\n    <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg \", {\r\n                                \"is-invalid\": errors.summary\r\n                            })}\r\n                            name=\"summary\" \r\n                            placeholder=\"Project Task summary\" \r\n                            value={this.state.summary}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.summary && (\r\n                                <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" \r\n                            placeholder=\"Acceptance Criteria\" \r\n                            name=\"acceptanceCriteria\"\r\n                            value={this.state.acceptanceCriteria}\r\n                            onChange={this.onChange}\r\n                            ></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\"\r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"dueDate\"\r\n                            value={this.state.dueDate}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors    \r\n})\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport classnames from 'classnames'\r\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions'\r\n\r\nexport class UpdateProjectTask extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const { backlog_id, pt_id } = this.props.match.params;        \r\n        this.state = {\r\n            id: \"\",\r\n            projectSequence: pt_id,\r\n            summary: \"\",\r\n            acceptanceCriteria: \"\",\r\n            status: \"\",\r\n            priority: 0,\r\n            dueDate: \"\",\r\n            projectIdentifier: backlog_id,\r\n            errors: {}\r\n        }\r\n        this.onChange =this.onChange.bind(this)\r\n        this.onSubmit =this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.errors) {\r\n            this.setState({ errors: nextProps.errors})\r\n        }\r\n         const {\r\n             id,\r\n             projectSequence,\r\n             summary,\r\n             acceptanceCriteria,\r\n             status,\r\n             priority,\r\n             dueDate,\r\n             projectIdentifier\r\n         } = nextProps.project_task;\r\n \r\n \r\n         this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier\r\n         });\r\n     };\r\n\r\n     componentDidMount() {\r\n        const { backlog_id, pt_id } = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n    };\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]:e.target.value });\r\n    };\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const updateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            status: this.state.status,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            projectIdentifier: this.state.projectIdentifier\r\n        }\r\n\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history)\r\n\r\n    }\r\n\r\n  render() {\r\n    const { backlog_id } = this.props.match.params; \r\n    const { errors } = this.state;\r\n    return (\r\n        <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${backlog_id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\r\n                                \"is-invalid\": errors.summary\r\n                            })}\r\n                            name=\"summary\" \r\n                            placeholder=\"Project Task summary\"\r\n                            value={this.state.summary}\r\n                            onChange={this.onChange}\r\n                            />\r\n                            {errors.summary && (\r\n                                <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" \r\n                            placeholder=\"Acceptance Criteria\" \r\n                            name=\"acceptanceCriteria\"\r\n                            value={this.state.acceptanceCriteria}\r\n                            onChange={this.onChange}\r\n                            ></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" \r\n                            className=\"form-control form-control-lg\" \r\n                            name=\"dueDate\" \r\n                            value={this.state.dueDate}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" \r\n                            name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}\r\n                            >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);\r\n","import { GET_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        \r\n        default:\r\n        return state;\r\n    }\r\n}","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types'\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT: \r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            }\r\n        case DELETE_PROJECT: \r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter((project) => project.projectIdentifier !== action.payload)\r\n            }\r\n        default:\r\n        return state;\r\n    }\r\n}","import { GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from '../actions/types'\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            }\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            }\r\n        case DELETE_PROJECT_TASK:\r\n        return {\r\n            ...state,\r\n            project_tasks: state.project_tasks.filter((task) => task.projectSequence !== action.payload)\r\n        }\r\n        \r\n        default:\r\n        return state;\r\n    }\r\n}","import { SET_CURRENT_USER } from '../actions/types'\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\n//const boolPayload = (payload) => {\r\n    // if(payload) {\r\n    //     return true\r\n    // } else {\r\n    //     return false\r\n    // }\r\n    //return payload ? true : false;\r\n//}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: (action.payload ? true : false),\r\n                user: action.payload\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from './securityReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState, \r\n    compose(applyMiddleware(...middleware),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f))\r\n\r\n//const ReactReduxDevTools =  window.__REDUX_DEVTOOLS_EXTENSION_ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//if(window.navigator.userAgent.includes(\"chrome\")) {\r\n\r\n//      store = createStore(\r\n//         rootReducer, \r\n//         initialState, \r\n//         compose(applyMiddleware(...middleware),\r\n//         ReactReduxDevTools\r\n// } else {\r\n//      store = createStore(\r\n//         rootReducer, \r\n//         initialState, \r\n//         compose(applyMiddleware(...middleware)))\r\n// }\r\n\r\nexport default store","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const SecureRoute = ({component: Component, security, ...otherProps}) => (\r\n    <Route {...otherProps} \r\n    render={props => security.validToken === true ? (<Component {...props} />) : \r\n    (<Redirect to=\"/login\" />)} />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps)(SecureRoute)\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport jwt_decode from 'jwt-decode'\n\nimport Landing from './components/layout/Landing'\nimport Register from './components/userManagement/Register';\nimport Login from './components/userManagement/Login';\n\nimport Dashboard from './components/Dashboard';\nimport Header from './components/layout/Header';\nimport AddProject from './components/project/AddProject';\nimport UpdateProject from './components/project/UpdateProject';\nimport ProjectBoard from './components/projectBoard/ProjectBoard';\nimport AddProjectTask from './components/projectBoard/projectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/projectBoard/projectTasks/UpdateProjectTask';\n\nimport store from './store';\n\nimport SecureRoute from './securityUtils/SecureRoute'\nimport setJWTToken from './securityUtils/setJWTToken'\nimport { logout } from './actions/securityActions'\nimport { SET_CURRENT_USER } from './actions/types';\n\n\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif(jwtToken){\n  setJWTToken(jwtToken)\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  })\n\n  const currentTime = Date.now() / 1000;\n   if(decoded_jwtToken.exp < currentTime) {\n      store.dispatch(logout())  \n       window.location.href = \"/\";\n   }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n          <Header />\n          { \n            // public routes \n          }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />  \n          {\n            // private routes\n          }  \n            <Switch>\n              <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecureRoute exact path=\"/addProject\" component={AddProject} />\n              <SecureRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\n              <SecureRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\n              <SecureRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\n              <SecureRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}